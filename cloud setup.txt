
1. 리소스그룹
리소스그룹명:  team4

2.쿠버네티스서비스(클러스터)
클러스터명:  team4-aks
지역: 한국중부
버전 : 1.17.11
노드수: 3개

3.Container Registry
레지스트리명:  team04acr

------------------------------------------------
--콘솔열어서 콘솔에서 클러스터 연결하기
4. 리소스그룹과 클러스터 연결
az aks get-credentials --resource-group team4 --name team4-aks

5. 로그인
az acr login --name team04acr

5. 클러스터에서 acr 연결
az aks update -n team4-aks -g team4 --attach-acr team04acr

6. 확인
kubectl get all
kubectl config current-context
kubectl delete deploy,service --all

-------------------------------------------------
6.  Kafka 설치
curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash

7. Kafka 네임스페이스생성
kubectl create ns kafka

8. 쿠버네티스에 kafka 배포
helm install my-kafka --namespace kafka incubator/kafka

9. kafka 토픽만들기 (hotelmanage 이름으로토픽생성)
kubectl -n kafka exec my-kafka-0 -- /usr/bin/kafka-topics --zookeeper my-kafka-zookeeper:2181 --topic hotelmanage ---create --partitions 1 --replication-factor 1

-토픽 목록 확인
kubectl -n kafka exec my-kafka-0 -- /usr/bin/kafka-topics --zookeeper my-kafka-zookeeper:2181 --list
-토픽 메세지 생성
kubectl -n kafka exec -ti my-kafka-0 -- /usr/bin/kafka-console-producer --broker-list my-kafka:9092 --topic eventTopic
-토픽 확인
kubectl -n kafka exec -ti my-kafka-0 -- /usr/bin/kafka-console-consumer --bootstrap-server my-kafka:9092 --topic shop --from-beginning

==========================================================
*Lab에 필요한 리소스 내려받기
git clone https://github.com/accommodationMgt/Gateway.git
git clone https://github.com/accommodationMgt/Reservation.git
git clone https://github.com/accommodationMgt/Room.git
git clone https://github.com/accommodationMgt/Notice.git
git clone https://github.com/accommodationMgt/Payment.git

*마이크로서비스 배포
-객실(Room) 서비스 
cd Room
mvn package -Dmaven.test.skip=true
az acr build --registry team04acr --image team04acr.azurecr.io/room:latest .
kubectl create deploy room --image=team04acr.azurecr.io/room:latest
kubectl expose deploy room --type="ClusterIP" --port=8080

* 서비스 확인
kubectl get po   
kubectl get deployments  
kubectl get svc   
kubectl get replicaset  
kubectl get all


* 설정파일(YAML)을 통한 Pod 배포 (직접 타이핑)
kubectl create -f declarative-pod.yaml
kubectl get pods

* Siege 



=================== 3. dev.Auzre.com에서 Pipeline 생성설정 ===========================================
dev.azure.com 접속

1. team4 프로젝트 생성

2.[ Pipeline 초기 세팅]
- Project Settings > Service Connections 설정
 ㄴ Docker Registry 선택 및  Azure container Registry 선택
 ㄴ Service Connection 명: team4Conn

3.[Pipeline Library생성 -소스의 공통부분 처리를위해 사용] - azurepipeline.yml 파일 확인
- Pipeline > library
 ㄴ Variable추가: 그룹명 team4vg
   ㄴcontainerRegistry : team4acr.azurecr.io
   ㄴcontainerRegistryDockerConnection : team4Conn
   ㄴenvironment : team4env

4.  환경변수 추가 
 ㄴ Pipeline > Environments
   ㄴ 클러스터 연결 설정 함.

5. [ Pipeline 생성] > 빌드>배포 한번에 수행
-  (github yml) 선택하여 시작함.
-  github 에서 pipeline 생성할 프로젝트를 선택하여 Run



https://github.com/hotelmanage3/main.git

https://github.com/hotelmanage3/RoomManagement.git
https://github.com/hotelmanage3/ReservationManagement.git
https://github.com/hotelmanage3/PaymentManagement.git
https://github.com/hotelmanage3/gateway.git

==========================================================
-서킷브레이커를 통한 장애격리
: 

- 스케일아웃
:

- CQRS
: 고객이 예약현황 조회 시 예약내역+객실상태를 같이 조회

- Readyness  Probe 설정을 통해 무정지 CI/CD 테스트
:

- Liveness 를 통한 셀프힐링 
:




 kubectl exec -it httpie bin/bash

==========================================================
* Azure 레지스트리(ACR)에 도커 이미지 푸시하기
az acr build --registry team04acr --image team04acr.azurecr.io/[이미지명]:latest .

==========================================================

==========================================================
*Lab에 필요한 리소스 내려받기
git clone https://github.com/accommodationMgt/Gateway.git
git clone https://github.com/accommodationMgt/Reservation.git
git clone https://github.com/accommodationMgt/Room.git
git clone https://github.com/accommodationMgt/Notice.git
git clone https://github.com/accommodationMgt/Payment.git

*마이크로서비스 배포
-객실(Room) 서비스 
cd Room
mvn package -Dmaven.test.skip=true
az acr build --registry (myregistry) --image team04acr.azurecr.io/room:latest .
kubectl create deploy products --image=team04acr.azurecr.io/room:latest
kubectl expose deploy products --type="ClusterIP" --port=8080

* 서비스 확인
kubectl get pods   # pods = pod = po
kubectl get deployments   # deploy
kubectl get services    # svc
kubectl get replicaset    # rs
kubectl get all


* 설정파일(YAML)을 통한 Pod 배포 (직접 타이핑)
kubectl create -f declarative-pod.yaml
kubectl get pods

* Siege 














